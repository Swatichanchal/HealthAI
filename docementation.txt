## HOW TO GET STARTED ?

Let's first understand the directory structure .

## For Main Website :

#### Directory Layout 
    .
    ├── models                                                           # contains all models
    │   ├── braintumor
    │   ├── cataract
    │   ├── pneumonia
    │   ├── riskmodel
    ├── static                                                           # contains image file , css file and js files .
    │   ├── images
    │   ├── style.css
    ├── templates                                                        # contains all html files
    │   ├── getting_started.html
    │   ├── index.html
    ├── app.py                                                           # web app file
    ├── requirements.txt                                                 # contains all required libraries and dependencies 
    ├── runtime.txt                

## How to Install and Run
* Run following commands in command prompt

```bash
pip install -r requirement.txt
``` 
* Run this to start server
```bash
python app.py
``` 
* Select the `problem` you want to check .
* Update `input` for that specific prroblem and check the `prediction\output` .




-------------------------------------------------------------------------------------------------------------------




## For Brain Tumor Problem :

#### Directory Layout 
    .
    ├── data                                                            # data folder is hidden , path is provided in .gitnore file
    │   ├── data.csv
    |   |── Image_folder
    ├── src
    │   ├── config.py                                                   # contains all the configuration
    |   ├── data_load.py                                                # loading dataset
    |   ├── dataset_class.py                                            # creating dataset
    |   ├── dice_loss.py                                                # creating loss function
    |   ├── plot_everything.py                                          # plotting dataset
    |   ├── predict.py                                                  # End-to-end, prediction file
    |   ├── test.py                                                     # testing model 
    |   ├── train.py                                                    # training model 
    |   ├── unet_arch                                                   # creating UNet Architecture
    ├── static
    |   ├── inputImage.jpg                                              # input image
    ├── templates
    |   ├── btindex.html                                                # html file for the UI
    ├── weights
    |   ├── model.h5                                                    # trained weights
    ├── brainapp.py                                                     # web app file
    
#### Content
| Directory | Info |
|-----------|--------------|
| `src` | Contains all Python files |
| `templates` | Contains HTML file |
| `static` | Contains css, js files and images  |
| `data` | Contains [data](https://www.kaggle.com/mateuszbuda/lgg-mri-segmentation) which is hidden  |
| `weights` | contains trained weights |

## How to Install and Run
```bash
pip install -r requirement.txt
``` 
* Run this to start server
```bash
python brainapp.py
``` 
* Update `MR` Image and predict if user has `brain tumor` or not and if yes then `where` 




-------------------------------------------------------------------------------------------------------------------





## For Cataract Problem :

#### Directory Layout 
    .
    ├── data                                                            # data folder is hidden , path is provided in .gitnore file
    │   ├── Images_folder
    |   |── data.csv
    ├── src
    │   ├── config.py                                                   # contains all the configuration
    |   ├── dataset_class.py                                            # create dataset
    |   ├── predict.py                                                  # End-to-end, prediction file
    |   ├── preprocess.py                                               # pre process dataset
    |   ├── train.py                                                    # training model 
    ├── static
    |   ├── inputImage.jpg                                              # input image
    ├── templates
    |   ├── catindex.html                                               # html file for the UI
    ├── weights
    |   ├── cat.h5                                                      # trained weights
    |   ├── cat1.h5                                                     # trained weights
    ├── catapp.py                                                       # web app file
    
#### Content
| Directory | Info |
|-----------|--------------|
| `src` | Contains all Python files |
| `templates` | Contains HTML file |
| `static` | Contains css, js files and images  |
| `data` | Contains [data](https://www.kaggle.com/andrewmvd/ocular-disease-recognition-odir5k) which is hidden  |
| `weights` | contains trained weights |

## How to Install and Run
```bash
pip install -r requirement.txt
``` 
* Run this to start server
```bash
python catapp.py
``` 
* Update `Retina` image and predict if user has `cataract` or not


-------------------------------------------------------------------------------------------------------------------


## For Pneumonia Problem :

#### Directory Layout 
    .
    ├── data                                                            # data folder is hidden , path is provided in .gitnore file
    │   ├── test
    │   │   ├── NORMAL
    │   │   ├── PNEUMONIA
    │   ├── train
    │   │   ├── NORMAL
    │   │   ├── PNEUMONIA
    │   ├── val
    │   │   ├── NORMAL
    │   │   ├── PNEUMONIA
    ├── src
    │   ├── config.py                                                   # contains all the configuration
    |   ├── plot_me.py                                                  # program file for visualisation of dataset 
    |   ├── predict.py                                                  # End-to-end, prediction file
    |   ├── train.py                                                    # training model 
    ├── static
    |   ├── inputImage.jpg                                              # input image
    ├── templates
    |   ├── pneindex.html                                               # html file for the UI
    ├── weights
    |   ├── pne.pt                                                      # trained weights
    ├── pneapp.py                                                       # web app file


#### Content
| Directory | Info |
|-----------|--------------|
| `src` | Contains all Python files |
| `templates` | Contains HTML file |
| `static` | Contains css, js files and images  |
| `data` | Contains [data](https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia) which is hidden  |
| `weights` | contains trained weights |

## How to Install and Run
```bash
pip install -r requirement.txt
``` 
* Run this to start server
```bash
python pneapp.py
``` 
* Update `X-Ray` image and predict if user has `pnemonia` or not




-------------------------------------------------------------------------------------------------------------------



## For 10 Year Risk Problem : 

#### Directory Layout 
    .
    ├── data                                                            
    │   ├── NHANESI_X.csv                                               # feature data
    │   ├── NHANESI_Y.csv                                               # label data
    ├── src
    │   ├── config.py                                                   # contains all the configuration
    |   ├── utlis.py                                                    # program file for data preparation
    |   ├── predict.py                                                  # End-to-end, prediction file
    |   ├── train.py                                                    # training model 
    ├── static
    |   ├── secondpage.css                                              # CSS files
    |   ├── style.css                                                   # CSS files
    ├── templates
    |   ├── rkindex.html                                                # html file for the UI
    ├── weights
    |   ├── model.pkl                                                   # trained weights
    ├── rapp.py                                                         # web app file
    
#### Content
| Directory | Info |
|-----------|--------------|
| `src` | Contains all Python files |
| `templates` | Contains HTML file |
| `static` | Contains css, js files and images  |
| `data` | Contains [data](https://wwwn.cdc.gov/nchs/nhanes/default.aspx)   |
| `weights` | contains trained model |

## How to Install and Run
```bash
pip install -r requirement.txt
``` 
* Run this to start server
```bash
python rapp.py
``` 
* Update `Features` and predict user has `risk` or not .




-------------------------------------------------------------------------------------------------------------------
